{"remainingRequest":"/Users/news/Desktop/source 2/old/topic_tai2area2/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/news/Desktop/source 2/old/topic_tai2area2/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/news/Desktop/source 2/old/topic_tai2area2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/news/Desktop/source 2/old/topic_tai2area2/src/components/marquee.vue?vue&type=template&id=3060dd7c&scoped=true&","dependencies":[{"path":"/Users/news/Desktop/source 2/old/topic_tai2area2/src/components/marquee.vue","mtime":1661925630364},{"path":"/Users/news/Desktop/source 2/old/topic_tai2area2/node_modules/cache-loader/dist/cjs.js","mtime":1639645388924},{"path":"/Users/news/Desktop/source 2/old/topic_tai2area2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1639645391404},{"path":"/Users/news/Desktop/source 2/old/topic_tai2area2/node_modules/cache-loader/dist/cjs.js","mtime":1639645388924},{"path":"/Users/news/Desktop/source 2/old/topic_tai2area2/node_modules/vue-loader/lib/index.js","mtime":1639645390872}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygiZGl2Iiwge30sIFsKICAgIF9jKAogICAgICAiZGl2IiwKICAgICAgeyBzdGF0aWNDbGFzczogIm1hcnF1ZWUiIH0sCiAgICAgIFsKICAgICAgICBfYygibWFycXVlZSIsIFsKICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgIiDmiJHmmK/ot5Hppqznh4jmiJHmmK/ot5Hppqznh4jmiJHmmK/ot5Hppqznh4jmiJHmmK/ot5Hppqznh4jmiJHmmK/ot5Hppqznh4jmiJHmmK/ot5Hppqznh4giCiAgICAgICAgICApLAogICAgICAgIF0pLAogICAgICBdLAogICAgICAxCiAgICApLAogICAgX3ZtLl9tKDApLAogICAgX3ZtLl9tKDEpLAogICAgX3ZtLl9tKDIpLAogICAgX3ZtLl9tKDMpLAogICAgX3ZtLl9tKDQpLAogICAgX3ZtLl9tKDUpLAogICAgX3ZtLl9tKDYpLAogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRpbWUiIH0sIFtfYygicCIsIFtfdm0uX3YoIui3nemboumBuOiIieaXpSIpXSldKQogIH0sCiAgZnVuY3Rpb24gKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoCiAgICAgICJhIiwKICAgICAgewogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICBocmVmOiAiaHR0cHM6Ly93d3cuZnR2bmV3cy5jb20udHcvdG9waWNzL2NvdmlkLTE5L2luZGV4Lmh0bWwiLAogICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgICB9LAogICAgICB9LAogICAgICBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAidG9waWMiLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOiAiaHR0cHM6Ly93d3cuZnR2bmV3cy5jb20udHcvdG9waWNzL2NvdmlkLTE5L2Fkc2lkZS5qcGciLAogICAgICAgICAgICBhbHQ6ICJDT1ZJRC0xOSIsCiAgICAgICAgICB9LAogICAgICAgIH0pLAogICAgICBdCiAgICApCiAgfSwKICBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygKICAgICAgImEiLAogICAgICB7CiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIGhyZWY6ICJodHRwczovL3d3dy5mdHZuZXdzLmNvbS50dy90b3BpY3MvdG9waWNzYXJlYS8iLAogICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgICB9LAogICAgICB9LAogICAgICBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAidG9waWMiLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOiAiaHR0cHM6Ly93d3cuZnR2bmV3cy5jb20udHcvdG9waWNzL3RvcGljc2FyZWEvaW1nL2FyZWEuanBnIiwKICAgICAgICAgICAgYWx0OiAi5pW45L2N5bCI6aGMIiwKICAgICAgICAgIH0sCiAgICAgICAgfSksCiAgICAgIF0KICAgICkKICB9LAogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKAogICAgICAiYSIsCiAgICAgIHsKICAgICAgICBhdHRyczogewogICAgICAgICAgaHJlZjogImh0dHBzOi8vd3d3LmZ0dm5ld3MuY29tLnR3L3RvcGljcy93YXJtLyIsCiAgICAgICAgICB0YXJnZXQ6ICJfYmxhbmsiLAogICAgICAgIH0sCiAgICAgIH0sCiAgICAgIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJ0b3BpYyIsCiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBzcmM6ICJodHRwczovL3d3dy5mdHZuZXdzLmNvbS50dy90b3BpY3Mvd2FybS9pbWcvd2FybWJhbm5lci5qcGciLAogICAgICAgICAgICBhbHQ6ICLmmpbmlrDogZ4iLAogICAgICAgICAgfSwKICAgICAgICB9KSwKICAgICAgXQogICAgKQogIH0sCiAgZnVuY3Rpb24gKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoCiAgICAgICJhIiwKICAgICAgewogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICBocmVmOiAiaHR0cHM6Ly93d3cuZnR2bmV3cy5jb20udHcvdG9waWNzL3NvbGRpZXIvIiwKICAgICAgICAgIHRhcmdldDogIl9ibGFuayIsCiAgICAgICAgfSwKICAgICAgfSwKICAgICAgWwogICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICBzdGF0aWNDbGFzczogInRvcGljIiwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHNyYzogImh0dHBzOi8vd3d3LmZ0dm5ld3MuY29tLnR3L3RvcGljcy9zb2xkaWVyL2Fkc2lkZS5qcGciLAogICAgICAgICAgICBhbHQ6ICLlhbXlvbnlu7bplbd5ZXMgb3Igbm8iLAogICAgICAgICAgfSwKICAgICAgICB9KSwKICAgICAgXQogICAgKQogIH0sCiAgZnVuY3Rpb24gKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoCiAgICAgICJhIiwKICAgICAgeyBhdHRyczogeyBocmVmOiAiaHR0cHM6Ly9lbmdsaXNoLmZ0dm5ld3MuY29tLnR3LyIsIHRhcmdldDogIl9ibGFuayIgfSB9LAogICAgICBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAidG9waWMiLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOiAiaHR0cHM6Ly93d3cuZnR2bmV3cy5jb20udHcvdG9waWNzL3dhcm0vaW1nLzEyLnBuZyIsCiAgICAgICAgICAgIGFsdDogIuawkeimluiLseiqnuaWsOiBniIsCiAgICAgICAgICB9LAogICAgICAgIH0pLAogICAgICBdCiAgICApCiAgfSwKICBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygKICAgICAgImEiLAogICAgICB7CiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgIGhyZWY6ICJodHRwczovL3d3dy5mdHZuZXdzLmNvbS50dy9wb2RjYXN0L2luZGV4Lmh0bWwiLAogICAgICAgICAgdGFyZ2V0OiAiX2JsYW5rIiwKICAgICAgICB9LAogICAgICB9LAogICAgICBbCiAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAidG9waWMiLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgc3JjOiAiaHR0cHM6Ly93d3cuZnR2bmV3cy5jb20udHcvcG9kY2FzdC9hc3NldHMvaW1nL2Fkc2lkZS5qcGciLAogICAgICAgICAgICBhbHQ6ICLmsJHoppbmlrDogZ5Qb2RjYXN0IiwKICAgICAgICAgIH0sCiAgICAgICAgfSksCiAgICAgIF0KICAgICkKICB9LApdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}