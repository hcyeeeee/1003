{"remainingRequest":"/Users/peichin/Desktop/election2/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/peichin/Desktop/election2/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/peichin/Desktop/election2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/peichin/Desktop/election2/src/components/Content_pm2.vue?vue&type=template&id=25e560e2&","dependencies":[{"path":"/Users/peichin/Desktop/election2/src/components/Content_pm2.vue","mtime":1665472011140},{"path":"/Users/peichin/Desktop/election2/node_modules/cache-loader/dist/cjs.js","mtime":1665150335024},{"path":"/Users/peichin/Desktop/election2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1665150338645},{"path":"/Users/peichin/Desktop/election2/node_modules/cache-loader/dist/cjs.js","mtime":1665150335024},{"path":"/Users/peichin/Desktop/election2/node_modules/vue-loader/lib/index.js","mtime":1665150338644},{"path":"/Users/peichin/Desktop/election2/node_modules/cache-loader/dist/cjs.js","mtime":1665150335024},{"path":"/Users/peichin/Desktop/election2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1665150338645},{"path":"/Users/peichin/Desktop/election2/node_modules/cache-loader/dist/cjs.js","mtime":1665150335024},{"path":"/Users/peichin/Desktop/election2/node_modules/vue-loader/lib/index.js","mtime":1665150338644}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}